buildscript {
    ext.kotlin_version = '1.2.0'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'kotlin'
apply plugin: 'jacoco'

sourceCompatibility = 1.6

def isReleaseBuild() {
    return version.contains("SNAPSHOT") == false
}

repositories {
    mavenCentral()
    mavenLocal()
    jcenter()
    maven {
        // Maven Central Snapshot Repo
        url "https://oss.sonatype.org/content/repositories/snapshots/"
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    compile 'org.deeplearning4j:deeplearning4j-core:0.9.1'
    compile 'org.nd4j:nd4j-native-platform:0.9.1'

    //Units of Measurement Library
    compile "org.tenkiv.physikal:core:1.1.3.3"

    //General utilities for Kotlin
    compile "org.jetbrains.kotlin:kotlin-reflect"
    compile 'org.tenkiv.coral.jdk:core:1.0.0.2'
    compile 'com.github.kittinunf.result:result:1.1.0'

    //Kotlin Coroutines
    compile 'org.jetbrains.kotlinx:kotlinx-coroutines-core:0.19'
    compile 'org.jetbrains.kotlinx:kotlinx-coroutines-nio:0.19'

    //Temp Tekdaqc Dependency
    compile 'com.tenkiv.tekdaqc:java-library:2.2.0.4-SNAPSHOT'

    //JSON
    compile 'com.fasterxml.jackson.core:jackson-databind:2.9.0'
    compile 'com.fasterxml.jackson.module:jackson-module-kotlin:2.9.0'
    compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.9.0'

    //Testing Framework
    testCompile 'io.kotlintest:kotlintest:2.0.5'
}

apply from: 'maven_push.gradle'

jacoco {
    toolVersion = '0.7.9'
}

jacocoTestReport {
    reports {
        html.enabled = true
        xml.enabled = true
        csv.enabled = false
    }
}

test.finalizedBy jacocoTestReport

kotlin {
    experimental {
        coroutines "enable"
    }
}
