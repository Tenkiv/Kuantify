apply plugin: 'kotlin'
apply plugin: 'kotlinx-serialization'
apply plugin: 'jacoco'
apply from: '../maven_push.gradle'

buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven { url 'https://kotlin.bintray.com/ktor' }
        maven { url "https://kotlin.bintray.com/kotlinx" }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"
    }
}

dependencies {
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'

    //KTOR Networking Libraries
    compile "io.ktor:ktor-network-tls:$ktor_version"
    compile "io.ktor:ktor-network:$ktor_version"

    //JSON
    implementation "com.fasterxml.jackson.core:jackson-databind:$jackson_version"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:$jackson_version"
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:$jackson_version"

    //Units of Measurement Library
    compile 'org.tenkiv.physikal:complete-units:2.0.6.0-SNAPSHOT'

    //General utilities for Kotlin
    compile 'org.tenkiv.coral:coral:2.1.0.1-SNAPSHOT'
    compile 'io.arrow-kt:arrow-core:0.7.2'
    implementation "org.jetbrains.kotlin:kotlin-reflect"

    //Kotlin Coroutines
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    //compile "org.jetbrains.kotlinx:kotlinx-coroutines-io:+"

    //Testing Framework
    testImplementation 'io.kotlintest:kotlintest-runner-junit5:3.1.7'
    testImplementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$serialization_version"
}

//test.finalizedBy jacocoTestReport

task quickTestRun(type: JavaExec) {
    classpath sourceSets.main.runtimeClasspath
    main = "org.tenkiv.kuantify.TestKt"
}

test {
    useJUnitPlatform()
}

jacoco {
    toolVersion = '0.8.1'
}

jacocoTestReport {
    reports {
        html.enabled = true
        xml.enabled = true
        csv.enabled = false
    }
}

sourceCompatibility = 1.8
