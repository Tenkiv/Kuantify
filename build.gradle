buildscript {
    ext.kotlin_version = '1.2.51'
    ext.coroutines_version = '0.23.4'
    ext.dl4j_version = '1.0.0-beta'
    ext.serialization_version = '0.6.0'
    ext.jackson_version = '2.9.6'

    repositories {
        mavenCentral()
        maven { url "https://kotlin.bintray.com/kotlinx" }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlinx:kotlinx-gradle-serialization-plugin:$serialization_version"
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlinx-serialization'
apply plugin: 'jacoco'

sourceCompatibility = 1.8

def isReleaseBuild() {
    return version.contains("SNAPSHOT") == false
}

repositories {
    mavenCentral()
    mavenLocal()
    jcenter()
    maven { url "https://kotlin.bintray.com/kotlinx" }
    maven {
        // Maven Central Snapshot Repo
        url "https://oss.sonatype.org/content/repositories/snapshots/"
    }
}

dependencies {
    compile 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'

    // DL4J
    compile "org.deeplearning4j:rl4j-core:$dl4j_version"
   // compile "org.deeplearning4j:rl4j-gym:$dl4j_version"
    compile "org.nd4j:nd4j-native-platform:$dl4j_version"

    //Units of Measurement Library
    compile 'org.tenkiv.physikal:core:2.0.2.0-SNAPSHOT'

    //General utilities for Kotlin
    compile "org.jetbrains.kotlin:kotlin-reflect"
    compile 'org.tenkiv.coral:coral:2.0.0.1'
    compile 'io.arrow-kt:arrow-core:0.7.2'
    compile 'org.nield:kotlin-statistics:1.1.0'

    //Kotlin Coroutines
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8:$coroutines_version"
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-nio:$coroutines_version"

    //Temp Tekdaqc Dependency
    compile 'com.tenkiv.tekdaqc:java-library:2.2.0.6-SNAPSHOT'

    //JSON
    compile "com.fasterxml.jackson.core:jackson-databind:$jackson_version"
    compile "com.fasterxml.jackson.module:jackson-module-kotlin:$jackson_version"
    compile "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:$jackson_version"

    //Testing Framework
    testCompile 'io.kotlintest:kotlintest-runner-junit5:3.1.7'

    testCompile "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$serialization_version"
}

apply from: 'maven_push.gradle'

test {
    useJUnitPlatform()
}

jacoco {
    toolVersion = '0.8.1'
}

jacocoTestReport {
    reports {
        html.enabled = true
        xml.enabled = true
        csv.enabled = false
    }
}

task quickTestRun(type: JavaExec) {
    classpath sourceSets.main.runtimeClasspath
    main = "org.tenkiv.daqc.TestKt"
}

test.finalizedBy jacocoTestReport

kotlin {
    experimental {
        coroutines "enable"
    }
}
